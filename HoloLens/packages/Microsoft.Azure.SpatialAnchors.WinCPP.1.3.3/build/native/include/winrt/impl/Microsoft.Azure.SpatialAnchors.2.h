// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.190605.7

#ifndef WINRT_Microsoft_Azure_SpatialAnchors_2_H
#define WINRT_Microsoft_Azure_SpatialAnchors_2_H
#include "winrt/impl/Microsoft.Azure.SpatialAnchors.1.h"
namespace winrt::Microsoft::Azure::SpatialAnchors
{
    struct AnchorLocatedDelegate : Windows::Foundation::IUnknown
    {
        AnchorLocatedDelegate(std::nullptr_t = nullptr) noexcept {}
        AnchorLocatedDelegate(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IUnknown(ptr, take_ownership_from_abi) {}
        template <typename L> AnchorLocatedDelegate(L lambda);
        template <typename F> AnchorLocatedDelegate(F* function);
        template <typename O, typename M> AnchorLocatedDelegate(O* object, M method);
        template <typename O, typename M> AnchorLocatedDelegate(com_ptr<O>&& object, M method);
        template <typename O, typename M> AnchorLocatedDelegate(weak_ref<O>&& object, M method);
        void operator()(Windows::Foundation::IInspectable const& sender, Microsoft::Azure::SpatialAnchors::AnchorLocatedEventArgs const& args) const;
    };
    struct LocateAnchorsCompletedDelegate : Windows::Foundation::IUnknown
    {
        LocateAnchorsCompletedDelegate(std::nullptr_t = nullptr) noexcept {}
        LocateAnchorsCompletedDelegate(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IUnknown(ptr, take_ownership_from_abi) {}
        template <typename L> LocateAnchorsCompletedDelegate(L lambda);
        template <typename F> LocateAnchorsCompletedDelegate(F* function);
        template <typename O, typename M> LocateAnchorsCompletedDelegate(O* object, M method);
        template <typename O, typename M> LocateAnchorsCompletedDelegate(com_ptr<O>&& object, M method);
        template <typename O, typename M> LocateAnchorsCompletedDelegate(weak_ref<O>&& object, M method);
        void operator()(Windows::Foundation::IInspectable const& sender, Microsoft::Azure::SpatialAnchors::LocateAnchorsCompletedEventArgs const& args) const;
    };
    struct OnLogDebugDelegate : Windows::Foundation::IUnknown
    {
        OnLogDebugDelegate(std::nullptr_t = nullptr) noexcept {}
        OnLogDebugDelegate(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IUnknown(ptr, take_ownership_from_abi) {}
        template <typename L> OnLogDebugDelegate(L lambda);
        template <typename F> OnLogDebugDelegate(F* function);
        template <typename O, typename M> OnLogDebugDelegate(O* object, M method);
        template <typename O, typename M> OnLogDebugDelegate(com_ptr<O>&& object, M method);
        template <typename O, typename M> OnLogDebugDelegate(weak_ref<O>&& object, M method);
        void operator()(Windows::Foundation::IInspectable const& sender, Microsoft::Azure::SpatialAnchors::OnLogDebugEventArgs const& args) const;
    };
    struct SessionErrorDelegate : Windows::Foundation::IUnknown
    {
        SessionErrorDelegate(std::nullptr_t = nullptr) noexcept {}
        SessionErrorDelegate(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IUnknown(ptr, take_ownership_from_abi) {}
        template <typename L> SessionErrorDelegate(L lambda);
        template <typename F> SessionErrorDelegate(F* function);
        template <typename O, typename M> SessionErrorDelegate(O* object, M method);
        template <typename O, typename M> SessionErrorDelegate(com_ptr<O>&& object, M method);
        template <typename O, typename M> SessionErrorDelegate(weak_ref<O>&& object, M method);
        void operator()(Windows::Foundation::IInspectable const& sender, Microsoft::Azure::SpatialAnchors::SessionErrorEventArgs const& args) const;
    };
    struct SessionUpdatedDelegate : Windows::Foundation::IUnknown
    {
        SessionUpdatedDelegate(std::nullptr_t = nullptr) noexcept {}
        SessionUpdatedDelegate(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IUnknown(ptr, take_ownership_from_abi) {}
        template <typename L> SessionUpdatedDelegate(L lambda);
        template <typename F> SessionUpdatedDelegate(F* function);
        template <typename O, typename M> SessionUpdatedDelegate(O* object, M method);
        template <typename O, typename M> SessionUpdatedDelegate(com_ptr<O>&& object, M method);
        template <typename O, typename M> SessionUpdatedDelegate(weak_ref<O>&& object, M method);
        void operator()(Windows::Foundation::IInspectable const& sender, Microsoft::Azure::SpatialAnchors::SessionUpdatedEventArgs const& args) const;
    };
    struct TokenRequiredDelegate : Windows::Foundation::IUnknown
    {
        TokenRequiredDelegate(std::nullptr_t = nullptr) noexcept {}
        TokenRequiredDelegate(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IUnknown(ptr, take_ownership_from_abi) {}
        template <typename L> TokenRequiredDelegate(L lambda);
        template <typename F> TokenRequiredDelegate(F* function);
        template <typename O, typename M> TokenRequiredDelegate(O* object, M method);
        template <typename O, typename M> TokenRequiredDelegate(com_ptr<O>&& object, M method);
        template <typename O, typename M> TokenRequiredDelegate(weak_ref<O>&& object, M method);
        void operator()(Windows::Foundation::IInspectable const& sender, Microsoft::Azure::SpatialAnchors::TokenRequiredEventArgs const& args) const;
    };
    struct __declspec(empty_bases) AnchorLocateCriteria : Microsoft::Azure::SpatialAnchors::IAnchorLocateCriteria
    {
        AnchorLocateCriteria(std::nullptr_t) noexcept {}
        AnchorLocateCriteria(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::IAnchorLocateCriteria(ptr, take_ownership_from_abi) {}
        AnchorLocateCriteria();
    };
    struct __declspec(empty_bases) AnchorLocatedEventArgs : Microsoft::Azure::SpatialAnchors::IAnchorLocatedEventArgs
    {
        AnchorLocatedEventArgs(std::nullptr_t) noexcept {}
        AnchorLocatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::IAnchorLocatedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) CloudSpatialAnchor : Microsoft::Azure::SpatialAnchors::ICloudSpatialAnchor
    {
        CloudSpatialAnchor(std::nullptr_t) noexcept {}
        CloudSpatialAnchor(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::ICloudSpatialAnchor(ptr, take_ownership_from_abi) {}
        CloudSpatialAnchor();
    };
    struct __declspec(empty_bases) CloudSpatialAnchorSession : Microsoft::Azure::SpatialAnchors::ICloudSpatialAnchorSession
    {
        CloudSpatialAnchorSession(std::nullptr_t) noexcept {}
        CloudSpatialAnchorSession(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::ICloudSpatialAnchorSession(ptr, take_ownership_from_abi) {}
        CloudSpatialAnchorSession();
    };
    struct __declspec(empty_bases) CloudSpatialAnchorSessionDeferral : Microsoft::Azure::SpatialAnchors::ICloudSpatialAnchorSessionDeferral
    {
        CloudSpatialAnchorSessionDeferral(std::nullptr_t) noexcept {}
        CloudSpatialAnchorSessionDeferral(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::ICloudSpatialAnchorSessionDeferral(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) CloudSpatialAnchorSessionDiagnostics : Microsoft::Azure::SpatialAnchors::ICloudSpatialAnchorSessionDiagnostics
    {
        CloudSpatialAnchorSessionDiagnostics(std::nullptr_t) noexcept {}
        CloudSpatialAnchorSessionDiagnostics(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::ICloudSpatialAnchorSessionDiagnostics(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) CloudSpatialAnchorWatcher : Microsoft::Azure::SpatialAnchors::ICloudSpatialAnchorWatcher
    {
        CloudSpatialAnchorWatcher(std::nullptr_t) noexcept {}
        CloudSpatialAnchorWatcher(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::ICloudSpatialAnchorWatcher(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) LocateAnchorsCompletedEventArgs : Microsoft::Azure::SpatialAnchors::ILocateAnchorsCompletedEventArgs
    {
        LocateAnchorsCompletedEventArgs(std::nullptr_t) noexcept {}
        LocateAnchorsCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::ILocateAnchorsCompletedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) NearAnchorCriteria : Microsoft::Azure::SpatialAnchors::INearAnchorCriteria
    {
        NearAnchorCriteria(std::nullptr_t) noexcept {}
        NearAnchorCriteria(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::INearAnchorCriteria(ptr, take_ownership_from_abi) {}
        NearAnchorCriteria();
    };
    struct __declspec(empty_bases) OnLogDebugEventArgs : Microsoft::Azure::SpatialAnchors::IOnLogDebugEventArgs
    {
        OnLogDebugEventArgs(std::nullptr_t) noexcept {}
        OnLogDebugEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::IOnLogDebugEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) SessionConfiguration : Microsoft::Azure::SpatialAnchors::ISessionConfiguration
    {
        SessionConfiguration(std::nullptr_t) noexcept {}
        SessionConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::ISessionConfiguration(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) SessionErrorEventArgs : Microsoft::Azure::SpatialAnchors::ISessionErrorEventArgs
    {
        SessionErrorEventArgs(std::nullptr_t) noexcept {}
        SessionErrorEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::ISessionErrorEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) SessionStatus : Microsoft::Azure::SpatialAnchors::ISessionStatus
    {
        SessionStatus(std::nullptr_t) noexcept {}
        SessionStatus(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::ISessionStatus(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) SessionUpdatedEventArgs : Microsoft::Azure::SpatialAnchors::ISessionUpdatedEventArgs
    {
        SessionUpdatedEventArgs(std::nullptr_t) noexcept {}
        SessionUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::ISessionUpdatedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) SpatialAnchorsFactory : Microsoft::Azure::SpatialAnchors::ISpatialAnchorsFactory
    {
        SpatialAnchorsFactory(std::nullptr_t) noexcept {}
        SpatialAnchorsFactory(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::ISpatialAnchorsFactory(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) TokenRequiredEventArgs : Microsoft::Azure::SpatialAnchors::ITokenRequiredEventArgs
    {
        TokenRequiredEventArgs(std::nullptr_t) noexcept {}
        TokenRequiredEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::SpatialAnchors::ITokenRequiredEventArgs(ptr, take_ownership_from_abi) {}
    };
}
#endif
