// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.190605.7

#ifndef WINRT_Microsoft_Azure_SpatialAnchors_1_H
#define WINRT_Microsoft_Azure_SpatialAnchors_1_H
#include "winrt/impl/Microsoft.Azure.SpatialAnchors.0.h"
namespace winrt::Microsoft::Azure::SpatialAnchors
{
    struct __declspec(empty_bases) IAnchorLocateCriteria :
        Windows::Foundation::IInspectable,
        impl::consume_t<IAnchorLocateCriteria>
    {
        IAnchorLocateCriteria(std::nullptr_t = nullptr) noexcept {}
        IAnchorLocateCriteria(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAnchorLocatedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IAnchorLocatedEventArgs>
    {
        IAnchorLocatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IAnchorLocatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICloudSpatialAnchor :
        Windows::Foundation::IInspectable,
        impl::consume_t<ICloudSpatialAnchor>
    {
        ICloudSpatialAnchor(std::nullptr_t = nullptr) noexcept {}
        ICloudSpatialAnchor(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICloudSpatialAnchorSession :
        Windows::Foundation::IInspectable,
        impl::consume_t<ICloudSpatialAnchorSession>
    {
        ICloudSpatialAnchorSession(std::nullptr_t = nullptr) noexcept {}
        ICloudSpatialAnchorSession(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICloudSpatialAnchorSessionDeferral :
        Windows::Foundation::IInspectable,
        impl::consume_t<ICloudSpatialAnchorSessionDeferral>
    {
        ICloudSpatialAnchorSessionDeferral(std::nullptr_t = nullptr) noexcept {}
        ICloudSpatialAnchorSessionDeferral(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICloudSpatialAnchorSessionDiagnostics :
        Windows::Foundation::IInspectable,
        impl::consume_t<ICloudSpatialAnchorSessionDiagnostics>
    {
        ICloudSpatialAnchorSessionDiagnostics(std::nullptr_t = nullptr) noexcept {}
        ICloudSpatialAnchorSessionDiagnostics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICloudSpatialAnchorWatcher :
        Windows::Foundation::IInspectable,
        impl::consume_t<ICloudSpatialAnchorWatcher>
    {
        ICloudSpatialAnchorWatcher(std::nullptr_t = nullptr) noexcept {}
        ICloudSpatialAnchorWatcher(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ILocateAnchorsCompletedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<ILocateAnchorsCompletedEventArgs>
    {
        ILocateAnchorsCompletedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ILocateAnchorsCompletedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) INearAnchorCriteria :
        Windows::Foundation::IInspectable,
        impl::consume_t<INearAnchorCriteria>
    {
        INearAnchorCriteria(std::nullptr_t = nullptr) noexcept {}
        INearAnchorCriteria(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IOnLogDebugEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IOnLogDebugEventArgs>
    {
        IOnLogDebugEventArgs(std::nullptr_t = nullptr) noexcept {}
        IOnLogDebugEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ISessionConfiguration :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISessionConfiguration>
    {
        ISessionConfiguration(std::nullptr_t = nullptr) noexcept {}
        ISessionConfiguration(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ISessionErrorEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISessionErrorEventArgs>
    {
        ISessionErrorEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISessionErrorEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ISessionStatus :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISessionStatus>
    {
        ISessionStatus(std::nullptr_t = nullptr) noexcept {}
        ISessionStatus(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ISessionUpdatedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISessionUpdatedEventArgs>
    {
        ISessionUpdatedEventArgs(std::nullptr_t = nullptr) noexcept {}
        ISessionUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ISpatialAnchorsFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISpatialAnchorsFactory>
    {
        ISpatialAnchorsFactory(std::nullptr_t = nullptr) noexcept {}
        ISpatialAnchorsFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ITokenRequiredEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<ITokenRequiredEventArgs>
    {
        ITokenRequiredEventArgs(std::nullptr_t = nullptr) noexcept {}
        ITokenRequiredEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
